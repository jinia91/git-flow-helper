name: Enforce Merge Strategy

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - dev
      - main
      - release/*

jobs:
  enforce-merge-strategy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Enforce specific merge strategy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          import requests
          import json

          api_url = f"https://api.github.com/repos/${{ github.repository }}/pulls/{PR_NUMBER}"
          headers = {
            "Authorization": f"token {GITHUB_TOKEN}",
            "Accept": "application/vnd.github.v3+json"
          }

          pr_data = requests.get(api_url, headers=headers).json()
          base_branch = pr_data['base']['ref']
          head_branch = pr_data['head']['ref']

          if 'feature/' in head_branch and base_branch == 'dev':
            merge_method = 'squash'
          elif 'qa/' in head_branch and 'release/' in base_branch:
            merge_method = 'squash'
          elif 'release/' in head_branch and base_branch in ['main', 'dev']:
            merge_method = 'merge'
          else:
            raise Exception("No specific merge strategy required.")

          merge_payload = {"merge_method": merge_method}
          merge_response = requests.put(api_url + "/merge", headers=headers, data=json.dumps(merge_payload))

          print("Merge response:", merge_response.json())

        shell: python
