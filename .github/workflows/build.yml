name: PR Merge Strategy Reminder

on:
  pull_request:
    types: [opened, reopened, synchronized, review_requested, review_request_removed]

jobs:
  pr-on:
    runs-on: ubuntu-latest
    steps:
      - name: feature branch -> dev branch
        if: github.event.pull_request.head.ref == 'feature/*' && github.event.pull_request.base.ref == 'dev'
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            feature branch -> dev branch 는 **Squash and Merge** 전략을 사용합니다. 맞는 전략을 택했는지 확인해주세요.

      - name: qa branch -> release branch
        if: github.event.pull_request.head.ref == 'qa/*' && github.event.pull_request.base.ref == 'release/*'
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            qa branch -> release branch 는 **Squash and Merge** 전략을 사용합니다. 맞는 전략을 택했는지 확인해주세요.

      - name: release branch -> main / dev branch
        if: github.event.pull_request.head.ref == 'release/*' && contains(fromJSON('["main", "dev"]'), github.event.pull_request.base.ref)
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            release branch -> main / dev branch 는 **Merge Commit** 전략을 사용합니다. 맞는 전략을 택했는지 확인해주세요.
